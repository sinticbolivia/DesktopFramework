/* GtkSinticBolivia.vapi generated by valac.exe 0.24.0, do not modify. */

namespace SinticBolivia {
	namespace Gtk {
		[CCode (cheader_filename = "GtkSinticBolivia.h")]
		public class DbTableTreeView : global::Gtk.TreeView {
			protected string dbTable;
			protected SinticBolivia.Database.SBDatabase dbh;
			protected string query;
			protected string[] tableColumns;
			protected string[] treeviewColumns;
			public DbTableTreeView (string db_table, string[] cols, SinticBolivia.Database.SBDatabase _dbh);
			public void Bind ();
			protected void Build ();
			protected void BuildQuery ();
			protected void ParseColumns (string[] cols);
		}
		[CCode (cheader_filename = "GtkSinticBolivia.h")]
		public class GtkHelper : GLib.Object {
			public GtkHelper ();
			public static void BuildTreeViewColumns (string[,] cols, ref global::Gtk.TreeView treeview);
			public static global::Gtk.Builder GetGladeUI (string glade_file);
			public static Gdk.Pixbuf GetPixbuf (string file, int width = 0, int height = 0);
			public static GLib.Resource LoadResource (string resource_file);
		}
		[CCode (cheader_filename = "GtkSinticBolivia.h")]
		public class InfoDialog : global::Gtk.Dialog {
			protected global::Gtk.EventBox boxHeader;
			protected string dlgType;
			public InfoDialog (string type = "info");
			protected void Build ();
			protected void OnButtonCloseClicked ();
			protected void SetEvents ();
			public global::Gtk.Button ButtonClose { get; set; }
			public global::Gtk.Label LabelMessage { get; set; }
			public global::Gtk.Label LabelTitle { get; set; }
			public string Message { get; set; }
			public string Title { get; set; }
		}
		[CCode (cheader_filename = "GtkSinticBolivia.h")]
		public class SBCairoCellTable : GLib.Object {
			public string Align;
			public bool Border;
			public double Height;
			public string Text;
			public double Width;
			protected Cairo.Context _cr;
			protected Pango.Layout _layout;
			protected double _x;
			protected double _y;
			public SBCairoCellTable (Cairo.Context cr, Pango.Layout layout);
			public void Draw ();
			public double X { get; set; }
			public double Y { get; set; }
		}
		[CCode (cheader_filename = "GtkSinticBolivia.h")]
		public abstract class SBCairoObject : GLib.Object {
			public double PageWidth;
			protected Cairo.Context context;
			protected int height;
			protected Pango.Layout layout;
			protected string type;
			protected int width;
			public SBCairoObject (string type);
			public abstract void CalculateSize ();
			public abstract void Draw ();
			public abstract void SetWidth (int w);
			public Cairo.Context Context { get; set; }
			public int Height { get; }
			public Pango.Layout PangoLayout { get; set; }
		}
		[CCode (cheader_filename = "GtkSinticBolivia.h")]
		public class SBCairoParagraph : SinticBolivia.Gtk.SBCairoObject {
			public string Align;
			public string Font;
			public double FontSize;
			protected string text;
			public SBCairoParagraph ();
			public override void CalculateSize ();
			public override void Draw ();
			public void SetText (string str, string? font = null, string align = "left");
			public override void SetWidth (int w);
			public SBCairoParagraph.with_context (Cairo.Context ctx, double page_width);
			public string Text { get; set; }
		}
		[CCode (cheader_filename = "GtkSinticBolivia.h")]
		public class SBCairoTable : GLib.Object {
			public double Height;
			protected uint _columns;
			protected double[] _columnsWidth;
			protected Cairo.Context _cr;
			protected Pango.Layout _layout;
			protected uint _nextColumnIndex;
			protected uint _nextRowIndex;
			protected double _nextX;
			protected double _nextY;
			protected uint _rows;
			protected double _x;
			protected double _y;
			public SBCairoTable (Cairo.Context cr, Pango.Layout layout, uint columns = 0, uint rows = 0);
			public SinticBolivia.Gtk.SBCairoCellTable AddCell (string text, string align = "left", bool border = true);
			public void SetColumnsWidth (double[] widths);
			public double X { get; set; }
			public double Y { get; set; }
		}
		[CCode (cheader_filename = "GtkSinticBolivia.h")]
		public class SBDashboard : global::Gtk.Fixed {
			protected int fixedCol;
			protected int fixedHeight;
			protected int fixedRow;
			protected int fixedWidth;
			protected int fixedX;
			protected int fixedY;
			protected int widgetHeight;
			protected int widgetMargin;
			protected int widgetWidth;
			public SBDashboard ();
			public void Add (global::Gtk.Widget child);
			public int Width { get; set; }
		}
		[CCode (cheader_filename = "GtkSinticBolivia.h")]
		public class SBDatePicker : global::Gtk.Fixed {
			protected global::Gtk.Button buttonSelectDate;
			protected global::Gtk.Calendar calendar;
			protected global::Gtk.Entry entryDate;
			protected global::Gtk.Dialog popup;
			public SBDatePicker ();
			protected void OnButtonSelectDateClicked ();
			protected void OnDateSelected ();
			protected void OnDaySelectedDoubleClick ();
			public void SetButtonImage (global::Gtk.Image img);
			protected void SetEvents ();
			public string DateString { get; set; }
		}
		[CCode (cheader_filename = "GtkSinticBolivia.h")]
		public abstract class SBGtkModule : SinticBolivia.SBModule {
			protected string _author;
			protected string _description;
			protected string _moduleId;
			protected string _name;
			protected double _version;
			protected GLib.Resource res_data;
			protected string resourceFile;
			protected string resourceNs;
			public SBGtkModule ();
			public global::Gtk.Builder GetGladeUi (string ui_file);
			public GLib.InputStream GetInputStream (string file);
			public Gdk.Pixbuf GetPixbuf (string image, int width = 0, int height = 0);
			public string[] GetSQLFromResource (string sql_file);
			public void LoadResources ();
		}
		[CCode (cheader_filename = "GtkSinticBolivia.h")]
		public class SBNotebook : global::Gtk.Notebook {
			protected Gee.HashMap<string,int> _pages;
			protected int _totalPages;
			public SBNotebook ();
			public int AddPage (string page_id, string title, global::Gtk.Widget content);
			public global::Gtk.Widget? GetPage (string page_id);
			public bool RemovePage (string page_id);
			public void SetCurrentPageById (string page_id);
		}
		[CCode (cheader_filename = "GtkSinticBolivia.h")]
		public class SBPrintPreview : global::Gtk.Box {
			public uint CurrentPage;
			public uint TotalPages;
			protected int _PAGE_PAD;
			protected double _ZOOM_IN_FACTOR;
			protected double _ZOOM_OUT_FACTOR;
			protected global::Gtk.ToolButton _buttonPrint;
			protected int _cols;
			protected global::Gtk.PrintContext _context;
			protected uint _cur_page;
			protected double _dpi;
			protected double _dpi_x;
			protected double _dpi_y;
			protected global::Gtk.Label _labelLastPage;
			protected global::Gtk.Layout _layout;
			protected global::Gtk.ToolItem _multi;
			protected uint _n_pages;
			protected global::Gtk.ToolButton _next;
			protected global::Gtk.PrintOperation _operation;
			protected global::Gtk.PrintOperationPreview _operationPreview;
			protected global::Gtk.Entry _pageEntry;
			protected global::Gtk.PageSetup _pageSetup;
			protected double _paperHeight;
			protected double _paperWidth;
			protected double _pixelsHeight;
			protected double _pixelsWidth;
			protected global::Gtk.ToolButton _prev;
			protected int _rows;
			protected double _scale;
			protected global::Gtk.ScrolledWindow _scrolledWindow;
			protected int _tile_h;
			protected int _tile_w;
			protected global::Gtk.ToolItem _zoomFit;
			protected global::Gtk.ToolButton _zoomIn;
			protected global::Gtk.ToolItem _zoomOne;
			protected global::Gtk.ToolButton _zoomOut;
			public SBPrintPreview (global::Gtk.PrintOperation _op, global::Gtk.PrintOperationPreview _op_preview, global::Gtk.PrintContext _context);
			protected bool OnLayoutDraw (Cairo.Context context);
			protected void OnNextButtonClicked ();
			protected void OnPrevButtonClicked ();
			protected void OnZoomInButtonClicked ();
			protected void OnZoomOutButtonClicked ();
			protected void buildPageFrame (ref unowned Cairo.Context context, double width, double height);
			protected void buildWidget ();
			protected void drawPageContent (Cairo.Context context, int page_number);
			protected double getPaperHeight ();
			protected double getPaperWidth ();
			protected double getScreenDpi ();
			protected void goToPage (int page);
			protected void onGotPageSize (global::Gtk.PrintContext context, global::Gtk.PageSetup page_setup);
			protected void onPreviewReady (global::Gtk.PrintContext context);
			protected void setEvents ();
			protected void setZoomFactor (double zoom);
			protected void updateLayoutSize ();
			protected void updatePaperSize ();
			protected void updateTileSize ();
			protected Cairo.Status writeFunc (uchar[] data);
			public Cairo.Context CairoContext { get; }
			public signal void ButtonPrintClicked ();
			public signal void ClosedPreview ();
		}
	}
}
